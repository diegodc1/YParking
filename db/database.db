CREATE TABLE users (
	user_id SERIAL,
	user_name VARCHAR(80),
	user_email VARCHAR(50),
	user_function VARCHAR(60),
	user_access INTEGER,
	user_password VARCHAR(256),
	PRIMARY KEY (user_id) 
);

CREATE TABLE companys (
	company_id SERIAL,
	company_name VARCHAR(120),
	company_email  VARCHAR(50),
	company_phone INTEGER,
	company_slots INTEGER,
	PRIMARY KEY (company_id)
);

CREATE TABLE clients (
	client_id SERIAL,
	client_name VARCHAR(100),
	client_phone INTEGER,
	client_email VARCHAR(50),
	client_cep INTEGER,
	client_address VARCHAR(150),
	client_type VARCHAR(20),
	client_bussines_plan VARCHAR(10),
	client_departure_time VARCHAR(10),
	client_company_id INTEGER,
	PRIMARY KEY (client_id),
	FOREIGN KEY (client_company_id) REFERENCES companys (company_id)
);

CREATE TABLE vehicles (
	vehicle_id SERIAL,
	vehicle_name VARCHAR(100),
	vehicle_plate VARCHAR(10),
	vehicle_model VARCHAR(40),
	vehicle_color VARCHAR(20),
	vehicle_category VARCHAR(15),
	vehicle_departure_time VARCHAR(10),
	vehicle_client_id INTEGER,
	PRIMARY KEY (vehicle_id),
	FOREIGN KEY (vehicle_client_id) REFERENCES clients (client_id)
);

CREATE TABLE movements (
	mov_id SERIAL,
	mov_type VARCHAR(10),
	mov_client_id INTEGER,
	mov_vehicle_id INTEGER,
	mov_datetime VARCHAR(30),
	PRIMARY KEY (mov_id),
	FOREIGN KEY (mov_client_id) REFERENCES clients (client_id),
	FOREIGN KEY (mov_vehicle_id) REFERENCES vehicles (vehicle_id)
);


CREATE TABLE parking_sections (
	prk_sect_id SERIAL,
	prk_sect_name VARCHAR(30),
	prk_sect_slots INT,
	prk_sect_color VARCHAR(10),
	PRIMARY KEY (prk_sect_id)
);


CREATE TABLE checkin (
	ckin_id SERIAL,
	ckin_vehicle_id INT NOT NULL,
	ckin_client_id INT NOT NULL, 
	ckin_section_id INT NOT NULL,
	ckin_time TIME NOT NULL, 
	ckin_user_id INT NOT NULL,
	PRIMARY KEY (ckin_id),
	FOREIGN KEY (ckin_vehicle_id) REFERENCES vehicles (vehicle_id),
	FOREIGN KEY (ckin_client_id) REFERENCES clients (client_id),
	FOREIGN KEY (ckin_section_id) REFERENCES parking_sections (prk_sect_id),
	FOREIGN KEY (ckin_user_id) REFERENCES users (user_id)
);

CREATE TABLE checkout (
	ckout_id SERIAL,
	ckout_vehicle_id INT NOT NULL,
	ckout_client_id INT NOT NULL, 
	ckout_section_id INT NOT NULL,
	ckout_time TIME NOT NULL, 
	ckout_user_id INT NOT NULL,
	PRIMARY KEY (ckout_id),
	FOREIGN KEY (ckout_vehicle_id) REFERENCES vehicles (vehicle_id),
	FOREIGN KEY (ckout_client_id) REFERENCES clients (client_id),
	FOREIGN KEY (ckout_section_id) REFERENCES parking_sections (prk_sect_id),
	FOREIGN KEY (ckout_user_id) REFERENCES users (user_id)
);


----------------
Add users:

INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Lucas Siqueira', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Luis', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Samuel', samuel@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Kauan', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Matheus', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Layla', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Luis Felipe', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Lucas Carvalho', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Fernanda', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Guilherme', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Phablo', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Kaue', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Lucas', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Lucas', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Lucas', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Lucas', lucasrp@rpinfo.com, 'Manobrista', 1, '123')
INSERT INTO users (user_name, user_email, user_function, user_access, user_password) VALUES ('Lucas', lucasrp@rpinfo.com, 'Manobrista', 1, '123')


------ TABELA CLIENTES

CREATE TABLE IF NOT EXISTS public.clients
(
    client_id integer NOT NULL DEFAULT nextval('clients_client_id_seq'::regclass),
    client_name character varying(100) COLLATE pg_catalog."default",
    client_email character varying(50) COLLATE pg_catalog."default",
    client_address character varying(150) COLLATE pg_catalog."default",
    client_type character varying(20) COLLATE pg_catalog."default",
    client_bussines_plan character varying(10) COLLATE pg_catalog."default",
    client_departure_time character varying(10) COLLATE pg_catalog."default",
    client_company_id integer,
    client_phone character varying COLLATE pg_catalog."default",
    client_cep character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT clients_pkey PRIMARY KEY (client_id),
    CONSTRAINT clients_client_company_id_fkey FOREIGN KEY (client_company_id)
        REFERENCES public.companys (company_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.clients
    OWNER to postgres;